#include <cs50.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <stdlib.h>

char upper_alpha_to_ci (char ch, int key);
char lower_alpha_to_ci (char ch, int key);

int main(int argc, string argv[])
{
   //check that the input is only 2 (name of program, key)
   if (argc != 2)
   {
       printf("Wrong key\n");
       return 1;
   }
   
   //check the entire key is numeric. if it is not, numeric_key will be set to
   //false 
    bool numeric_key = true;
    
    for (int i = 0; i < strlen(argv[1]); i++)
    {
        if (isdigit(argv[1][i]) == 0)
        {
            numeric_key = false;
        }
    }
    //turn string key into an int
    int key = atoi(argv[1]);
    
    //check that the key is a positive integer, break out of the program if its not
    if (key < 0)
    {
        printf("Wrong key\n");
        return 1;
    }
    
    if (numeric_key == false)
    {
        printf("Wrong key\n");
        return 1;
    }
    
    else
    {
         string text = get_string("Input text...");
         int len = strlen(text);
         
          for (int i = 0; i < len; i++)
            {
           if (isupper(text[i]))
                {
                    text[i] = upper_alpha_to_ci(text[i], key);
                
                }
        
            else if (islower(text[i]))
                {
                    text[i] = lower_alpha_to_ci(text[i], key);
            
                }
            else
                {
                    text[i] = text[i];
                }
            printf("%c", text[i]);
           }
           return 0;
    }
}
    
  
char upper_alpha_to_ci (char ch, int key)
{
    char alpha[26] = {'A', 'B', 'C', 'D', 'E' , 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q','R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};
    int index = ch - 65;
    int cipher_index = (index + key)%26;
    char temp = alpha[cipher_index];
    char cipher_text = temp; 
    return cipher_text;
}

char lower_alpha_to_ci (char ch, int key)
{
    char alpha[26] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};
    int index = ch - 97;
    int cipher_index = (index + key)%26;
    char cipher_text = alpha[cipher_index];
    return cipher_text;
}
